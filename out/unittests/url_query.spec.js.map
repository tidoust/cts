{"version":3,"sources":["../../src/unittests/url_query.spec.ts"],"names":["description","TestQuerySingleCase","TestQueryMultiCase","TestQueryMultiTest","TestQueryMultiFile","makeTestGroup","UnitTest","T","expectQueryString","q","exp","s","toString","expect","g","test","fn","t","f","_pri1","x","_pri2","p","a"],"mappings":"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","sourcesContent":["export const description = `\nUnit tests for URL queries.\n`;\n\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiCase,\n  TestQueryMultiTest,\n  TestQueryMultiFile,\n} from '../common/framework/query/query.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass T extends UnitTest {\n  expectQueryString(q: TestQuery, exp: string): void {\n    const s = q.toString();\n    this.expect(s === exp, `got ${s} expected ${exp}`);\n  }\n}\n\nexport const g = makeTestGroup(T);\n\ng.test('stringifyQuery,single_case').fn(t => {\n  t.expectQueryString(\n    new TestQuerySingleCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      _pri1: 0,\n      x: 3,\n      _pri2: 1,\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";x=3'\n  );\n});\n\ng.test('stringifyQuery,single_case,json').fn(t => {\n  t.expectQueryString(\n    new TestQuerySingleCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      x: { p: 2, q: 'Q' },\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";x={\"p\":2,\"q\":\"Q\"}'\n  );\n});\n\ng.test('stringifyQuery,multi_case').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {\n      f: 'g',\n      _pri1: 0,\n      a: 3,\n      _pri2: 1,\n    }),\n    'a:b_1,2_c:d_3,4_e:f=\"g\";a=3;*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiCase('a', ['b_1', '2_c'], ['d_3', '4_e'], {}),\n    'a:b_1,2_c:d_3,4_e:*'\n  );\n});\n\ng.test('stringifyQuery,multi_test').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiTest('a', ['b_1', '2_c'], ['d_3', '4_e']),\n    'a:b_1,2_c:d_3,4_e,*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiTest('a', ['b_1', '2_c'], []), //\n    'a:b_1,2_c:*'\n  );\n});\n\ng.test('stringifyQuery,multi_file').fn(t => {\n  t.expectQueryString(\n    new TestQueryMultiFile('a', ['b_1', '2_c']), //\n    'a:b_1,2_c,*'\n  );\n\n  t.expectQueryString(\n    new TestQueryMultiFile('a', []), //\n    'a:*'\n  );\n});\n"],"file":"url_query.spec.js"}