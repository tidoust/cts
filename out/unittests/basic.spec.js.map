{"version":3,"sources":["../../src/unittests/basic.spec.ts"],"names":["description","makeTestGroup","UnitTest","g","test","fn","t","params","debug","JSON","stringify","a","b","_result","expect"],"mappings":";;GAAA,OAAO,MAAMA,WAAW,GAAI;;CAArB,CAIP,SAASC,aAAT,QAA8B,mCAA9B;;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,OAAO,MAAMC,CAAC,GAAGF,aAAa,CAACC,QAAD,CAAvB;;;AAGPC,CAAC,CAACC,IAAF,CAAO,WAAP,EAAoBC,EAApB,CAAuBC,CAAC,IAAI,CAAE,CAA9B;;;AAGAH,CAAC,CAACC,IAAF,CAAO,YAAP,EAAqBC,EAArB,CAAwB,MAAMC,CAAN,IAAW,CAAE,CAArC;;AAEAH,CAAC,CAACC,IAAF,CAAO,uBAAP;AACGG,MADH,CACU,CAAC,EAAD,CADV;AAEGF,EAFH,CAEMC,CAAC,IAAI;AACPA,EAAAA,CAAC,CAACE,KAAF,CAAQC,IAAI,CAACC,SAAL,CAAeJ,CAAC,CAACC,MAAjB,CAAR;AACD,CAJH;;AAMAJ,CAAC,CAACC,IAAF,CAAO,wBAAP;AACGG,MADH,CACU,CAAC,EAAD,CADV;AAEGF,EAFH,CAEM,MAAMC,CAAN,IAAW;AACbA,EAAAA,CAAC,CAACE,KAAF,CAAQC,IAAI,CAACC,SAAL,CAAeJ,CAAC,CAACC,MAAjB,CAAR;AACD,CAJH;;AAMAJ,CAAC,CAACC,IAAF,CAAO,iCAAP;AACGG,MADH,CACU;AACN,EAAEI,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,CAAX,EAAcC,OAAO,EAAE,CAAvB,EADM,EACsB;AAC5B,EAAEF,CAAC,EAAE,CAAL,EAAQC,CAAC,EAAE,CAAC,CAAZ,EAAeC,OAAO,EAAE,CAAxB,EAFM,CADV;;AAKGR,EALH,CAKMC,CAAC,IAAI;AACP,QAAM,EAAEK,CAAF,EAAKC,CAAL,EAAQC,OAAR,KAAoBP,CAAC,CAACC,MAA5B;AACAD,EAAAA,CAAC,CAACQ,MAAF,CAASH,CAAC,GAAGC,CAAJ,KAAUC,OAAnB;AACD,CARH","sourcesContent":["export const description = `\nBasic unit tests for test framework.\n`;\n\nimport { makeTestGroup } from '../common/framework/test_group.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport const g = makeTestGroup(UnitTest);\n\n/* eslint-disable-next-line  @typescript-eslint/no-unused-vars */\ng.test('test,sync').fn(t => {});\n\n/* eslint-disable-next-line  @typescript-eslint/no-unused-vars */\ng.test('test,async').fn(async t => {});\n\ng.test('test_with_params,sync')\n  .params([{}])\n  .fn(t => {\n    t.debug(JSON.stringify(t.params));\n  });\n\ng.test('test_with_params,async')\n  .params([{}])\n  .fn(async t => {\n    t.debug(JSON.stringify(t.params));\n  });\n\ng.test('test_with_params,private_params')\n  .params([\n    { a: 1, b: 2, _result: 3 }, //\n    { a: 4, b: -3, _result: 1 },\n  ])\n  .fn(t => {\n    const { a, b, _result } = t.params;\n    t.expect(a + b === _result);\n  });\n"],"file":"basic.spec.js"}