{"version":3,"sources":["../../src/unittests/test_group_test.ts"],"names":["Logger","TestQuerySingleCase","objectEquals","UnitTest","TestGroupTest","run","g","logger","rc","Promise","all","iterate","query","id","test","params","rec","record","toString","results","expectCases","cases","gcases","Array","from","map","expect"],"mappings":";;GAAA,SAASA,MAAT,QAAmC,uCAAnC,CACA,SAASC,mBAAT,QAAoC,oCAApC;AAEA,SAASC,YAAT,QAA6B,kCAA7B;;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,OAAO,MAAMC,aAAN,SAA4BD,QAA5B,CAAqC;AAC1C,QAAME,GAAN,CAAUC,CAAV,EAAmD;AACjD,UAAMC,MAAM,GAAG,IAAIP,MAAJ,CAAW,IAAX,CAAf;AACA,SAAK,MAAMQ,EAAX,IAAiB,MAAMC,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACK,OAAF,EAAZ,CAAvB,EAAiD;AAC/C,YAAMC,KAAK,GAAG,IAAIX,mBAAJ,CAAwB,IAAxB,EAA8B,CAAC,IAAD,CAA9B,EAAsCO,EAAE,CAACK,EAAH,CAAMC,IAA5C,EAAkDN,EAAE,CAACK,EAAH,CAAME,MAAxD,CAAd;AACA,YAAM,CAACC,GAAD,IAAQT,MAAM,CAACU,MAAP,CAAcL,KAAK,CAACM,QAAN,EAAd,CAAd;AACA,YAAMV,EAAE,CAACH,GAAH,CAAOW,GAAP,CAAN;AACD;AACD,WAAOT,MAAM,CAACY,OAAd;AACD;;AAEDC,EAAAA,WAAW,CAACd,CAAD,EAAqBe,KAArB,EAAgD;AACzD,UAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWlB,CAAC,CAACK,OAAF,EAAX,EAAwBc,GAAxB,CAA4BjB,EAAE,IAAIA,EAAE,CAACK,EAArC,CAAf;AACA,SAAKa,MAAL,CAAYxB,YAAY,CAACoB,MAAD,EAASD,KAAT,CAAxB;AACD,GAdyC","sourcesContent":["import { Logger, LogResults } from '../common/framework/logging/logger.js';\nimport { TestQuerySingleCase } from '../common/framework/query/query.js';\nimport { RunCaseIterable, TestCaseID } from '../common/framework/test_group.js';\nimport { objectEquals } from '../common/framework/util/util.js';\n\nimport { UnitTest } from './unit_test.js';\n\nexport class TestGroupTest extends UnitTest {\n  async run(g: RunCaseIterable): Promise<LogResults> {\n    const logger = new Logger(true);\n    for (const rc of await Promise.all(g.iterate())) {\n      const query = new TestQuerySingleCase('xx', ['yy'], rc.id.test, rc.id.params);\n      const [rec] = logger.record(query.toString());\n      await rc.run(rec);\n    }\n    return logger.results;\n  }\n\n  expectCases(g: RunCaseIterable, cases: TestCaseID[]): void {\n    const gcases = Array.from(g.iterate()).map(rc => rc.id);\n    this.expect(objectEquals(gcases, cases));\n  }\n}\n"],"file":"test_group_test.js"}