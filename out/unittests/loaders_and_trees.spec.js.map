{"version":3,"sources":["../../src/unittests/loaders_and_trees.spec.ts"],"names":["description","TestFileLoader","Logger","parseQuery","TestQuerySingleCase","TestQueryMultiCase","TestQueryMultiTest","TestQueryMultiFile","makeTestGroup","makeTestGroupForUnitTesting","assert","objectEquals","UnitTest","listingData","suite1","file","readme","suite2","specsData","g","test","fn","params","x","a","b","_c","t","debug","fail","FakeTestFileLoader","listing","suite","import","path","LoadingTest","load","query","Array","from","loader","loadCases","loadNames","map","c","toString","shouldReject","expect","length","s","l","log","exp","i","status","logs","name","rec","res","record","run","results","get","timems","undefined","JSON","stringify","startsWith","indexOf","testIterateCollapsed","expectations","expectedResult","treePromise","loadTree","tree","actual","iterateCollapsedQueries","q","join"],"mappings":"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","sourcesContent":["export const description = `\nTests for queries/filtering, loading, and running.\n`;\n\nimport { TestFileLoader, SpecFile } from '../common/framework/file_loader.js';\nimport { Logger } from '../common/framework/logging/logger.js';\nimport { Status } from '../common/framework/logging/result.js';\nimport { parseQuery } from '../common/framework/query/parseQuery.js';\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiCase,\n  TestQueryMultiTest,\n  TestQueryMultiFile,\n} from '../common/framework/query/query.js';\nimport { makeTestGroup, makeTestGroupForUnitTesting } from '../common/framework/test_group.js';\nimport { TestSuiteListing, TestSuiteListingEntry } from '../common/framework/test_suite_listing.js';\nimport { TestTreeLeaf } from '../common/framework/tree.js';\nimport { assert, objectEquals } from '../common/framework/util/util.js';\n\nimport { UnitTest } from './unit_test.js';\n\nconst listingData: { [k: string]: TestSuiteListingEntry[] } = {\n  suite1: [\n    { file: [], readme: 'desc 1a' },\n    { file: ['foo'], description: 'desc 1b' },\n    { file: ['bar'], readme: 'desc 1c' },\n    { file: ['bar', 'buzz', 'buzz'], description: 'desc 1d' },\n    { file: ['baz'], description: 'desc 1e' },\n  ],\n  suite2: [\n    { file: [], readme: 'desc 2a' },\n    { file: ['foof'], description: 'desc 2b' },\n  ],\n};\n\nconst specsData: { [k: string]: SpecFile } = {\n  'suite1/foo.spec.js': {\n    description: 'desc 1b',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('hello').fn(() => {});\n      g.test('bonjour').fn(() => {});\n      g.test('hola').fn(() => {});\n      return g;\n    })(),\n  },\n  'suite1/bar/biz.spec.js': {\n    description: 'desc 1f',\n    g: makeTestGroupForUnitTesting(UnitTest),\n  },\n  'suite1/bar/bez.spec.js': {\n    description: 'desc 1g',\n    g: makeTestGroupForUnitTesting(UnitTest),\n  },\n  'suite1/bar/buzz/buzz.spec.js': {\n    description: 'desc 1d',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('zap').fn(() => {});\n      return g;\n    })(),\n  },\n  'suite1/baz.spec.js': {\n    description: 'desc 1e',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('wye')\n        .params([{}, { x: 1 }])\n        .fn(() => {});\n      g.test('zed')\n        .params([\n          { a: 1, b: 2, _c: 0 },\n          { b: 3, a: 1, _c: 0 },\n        ])\n        .fn(() => {});\n      return g;\n    })(),\n  },\n  'suite2/foof.spec.js': {\n    description: 'desc 2b',\n    g: (() => {\n      const g = makeTestGroupForUnitTesting(UnitTest);\n      g.test('blah').fn(t => {\n        t.debug('OK');\n      });\n      g.test('bleh')\n        .params([{ a: 1 }])\n        .fn(t => {\n          t.debug('OK');\n          t.debug('OK');\n        });\n      g.test('bluh,a').fn(t => {\n        t.fail('goodbye');\n      });\n      return g;\n    })(),\n  },\n};\n\nclass FakeTestFileLoader extends TestFileLoader {\n  async listing(suite: string): Promise<TestSuiteListing> {\n    return listingData[suite];\n  }\n\n  async import(path: string): Promise<SpecFile> {\n    assert(path in specsData, '[test] mock file ' + path + ' does not exist');\n    return specsData[path];\n  }\n}\n\nclass LoadingTest extends UnitTest {\n  static readonly loader = new FakeTestFileLoader();\n\n  async load(query: string): Promise<TestTreeLeaf[]> {\n    return Array.from(await LoadingTest.loader.loadCases(parseQuery(query)));\n  }\n\n  async loadNames(query: string): Promise<string[]> {\n    return (await this.load(query)).map(c => c.query.toString());\n  }\n}\n\nexport const g = makeTestGroup(LoadingTest);\n\ng.test('suite').fn(async t => {\n  t.shouldReject('Error', t.load('suite1'));\n  t.shouldReject('Error', t.load('suite1:'));\n});\n\ng.test('group').fn(async t => {\n  t.expect((await t.load('suite1:*')).length === 8);\n  t.expect((await t.load('suite1:foo,*')).length === 3); // x:foo,* matches x:foo:\n  t.expect((await t.load('suite1:bar,*')).length === 1);\n  t.expect((await t.load('suite1:bar,buzz,buzz,*')).length === 1);\n\n  t.shouldReject('Error', t.load('suite1:f*'));\n\n  {\n    const s = new TestQueryMultiFile('suite1', ['bar', 'buzz']).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n});\n\ng.test('test').fn(async t => {\n  t.shouldReject('Error', t.load('suite1::'));\n  t.shouldReject('Error', t.load('suite1:bar:'));\n  t.shouldReject('Error', t.load('suite1:bar,:'));\n\n  t.shouldReject('Error', t.load('suite1::*'));\n  t.shouldReject('Error', t.load('suite1:bar,:*'));\n  t.shouldReject('Error', t.load('suite1:bar:*'));\n\n  t.expect((await t.load('suite1:foo:*')).length === 3);\n  t.expect((await t.load('suite1:bar,buzz,buzz:*')).length === 1);\n  t.expect((await t.load('suite1:baz:*')).length === 4);\n\n  t.expect((await t.load('suite2:foof:bluh,*')).length === 1);\n  t.expect((await t.load('suite2:foof:bluh,a,*')).length === 1);\n\n  {\n    const s = new TestQueryMultiTest('suite2', ['foof'], ['bluh']).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n});\n\ng.test('case').fn(async t => {\n  t.shouldReject('Error', t.load('suite1:foo::'));\n  t.shouldReject('Error', t.load('suite1:bar:zed,:'));\n\n  t.shouldReject('Error', t.load('suite1:foo:h*'));\n\n  t.shouldReject('Error', t.load('suite1:foo::*'));\n  t.shouldReject('Error', t.load('suite1:baz::*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed,:*'));\n\n  t.shouldReject('Error', t.load('suite1:baz:zed:'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1;b=2*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1;b=2;'));\n  t.shouldReject('SyntaxError', t.load('suite1:baz:zed:a=1;b=2,')); // tries to parse '2,' as JSON\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1,b=2')); // '=' not allowed in value '1,b=2'\n  t.shouldReject('Error', t.load('suite1:baz:zed:b=2*'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:b=2;a=1;_c=0'));\n  t.shouldReject('Error', t.load('suite1:baz:zed:a=1,*'));\n\n  t.expect((await t.load('suite1:baz:zed:*')).length === 2);\n  t.expect((await t.load('suite1:baz:zed:a=1;*')).length === 2);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=2')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=2;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;a=1')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=2;a=1;*')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:b=3;a=1')).length === 1);\n  t.expect((await t.load('suite1:baz:zed:a=1;b=3')).length === 1);\n  t.expect((await t.load('suite1:foo:hello:')).length === 1);\n\n  {\n    const s = new TestQueryMultiCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n  {\n    const s = new TestQuerySingleCase('suite1', ['baz'], ['zed'], { a: 1, b: 2 }).toString();\n    t.expect((await t.load(s)).length === 1);\n  }\n});\n\ng.test('end2end').fn(async t => {\n  const l = await t.load('suite2:foof:*');\n  assert(l.length === 3, 'listing length');\n\n  const log = new Logger(true);\n\n  const exp = async (\n    i: number,\n    query: TestQuery,\n    status: Status,\n    logs: (s: string[]) => boolean\n  ) => {\n    t.expect(objectEquals(l[i].query, query));\n    const name = l[i].query.toString();\n    const [rec, res] = log.record(name);\n    await l[i].run(rec);\n\n    t.expect(log.results.get(name) === res);\n    t.expect(res.status === status);\n    t.expect(res.timems >= 0);\n    assert(res.logs !== undefined); // only undefined while pending\n    t.expect(logs(res.logs.map(l => JSON.stringify(l))));\n  };\n\n  await exp(0, new TestQuerySingleCase('suite2', ['foof'], ['blah'], {}), 'pass', logs =>\n    objectEquals(logs, ['\"DEBUG: OK\"'])\n  );\n  await exp(1, new TestQuerySingleCase('suite2', ['foof'], ['bleh'], { a: 1 }), 'pass', logs =>\n    objectEquals(logs, ['\"DEBUG: OK\"', '\"DEBUG: OK\"'])\n  );\n  await exp(\n    2,\n    new TestQuerySingleCase('suite2', ['foof'], ['bluh', 'a'], {}),\n    'fail',\n    logs =>\n      logs.length === 1 &&\n      logs[0].startsWith('\"EXPECTATION FAILED: goodbye\\\\n') &&\n      logs[0].indexOf('loaders_and_trees.spec.') !== -1\n  );\n});\n\nasync function testIterateCollapsed(\n  t: LoadingTest,\n  expectations: string[],\n  expectedResult: 'throws' | string[]\n) {\n  const treePromise = LoadingTest.loader.loadTree(\n    new TestQueryMultiFile('suite1', []),\n    expectations\n  );\n  if (expectedResult === 'throws') {\n    t.shouldReject('Error', treePromise, 'loadTree should have thrown Error');\n    return;\n  }\n  const tree = await treePromise;\n  const actual = Array.from(tree.iterateCollapsedQueries(), q => q.toString());\n  if (!objectEquals(actual, expectedResult)) {\n    t.fail(\n      `iterateCollapsed failed:\n  got [${actual.join(', ')}]\n  exp [${expectedResult.join(', ')}]\n${tree.toString()}`\n    );\n  }\n}\n\ng.test('print').fn(async () => {\n  const tree = await LoadingTest.loader.loadTree(new TestQueryMultiFile('suite1', []));\n  tree.toString();\n});\n\ng.test('iterateCollapsed').fn(async t => {\n  // Expectations have no effect\n  await testIterateCollapsed(t, [], ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']);\n  await testIterateCollapsed(\n    t,\n    ['suite1:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']\n  );\n  await testIterateCollapsed(\n    t,\n    ['suite1:foo:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']\n  );\n  await testIterateCollapsed(\n    t,\n    ['suite1:bar,buzz,buzz:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:*']\n  );\n\n  // Expectations have some effect\n  await testIterateCollapsed(\n    t,\n    ['suite1:baz:wye:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye:*', 'suite1:baz:zed,*']\n  );\n  await testIterateCollapsed(\n    t,\n    ['suite1:baz:zed:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye,*', 'suite1:baz:zed:*']\n  );\n  await testIterateCollapsed(\n    t,\n    ['suite1:baz:wye:*', 'suite1:baz:zed:*'],\n    ['suite1:foo:*', 'suite1:bar,buzz,buzz:*', 'suite1:baz:wye:*', 'suite1:baz:zed:*']\n  );\n  await testIterateCollapsed(\n    t,\n    ['suite1:baz:wye:'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    ['suite1:baz:wye:x=1'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1',\n      'suite1:baz:zed,*',\n    ]\n  );\n  await testIterateCollapsed(\n    t,\n    ['suite1:foo:*', 'suite1:baz:wye:'],\n    [\n      'suite1:foo:*',\n      'suite1:bar,buzz,buzz:*',\n      'suite1:baz:wye:',\n      'suite1:baz:wye:x=1;*',\n      'suite1:baz:zed,*',\n    ]\n  );\n\n  // Invalid expectation queries\n  await testIterateCollapsed(t, ['garbage'], 'throws');\n  await testIterateCollapsed(t, ['garbage*'], 'throws');\n  await testIterateCollapsed(t, ['suite1*'], 'throws');\n  await testIterateCollapsed(t, ['suite1:foo*'], 'throws');\n  await testIterateCollapsed(t, ['suite1:foo:ba*'], 'throws');\n\n  // Valid expectation queries but they don't match anything\n  await testIterateCollapsed(t, ['garbage:*'], 'throws');\n  await testIterateCollapsed(t, ['suite1:doesntexist:*'], 'throws');\n  await testIterateCollapsed(t, ['suite2:foo:*'], 'throws');\n  // Doesn't match anything because we collapse this unnecessary node into just 'suite1:foo:*'\n  await testIterateCollapsed(t, ['suite1:foo,*'], 'throws');\n});\n"],"file":"loaders_and_trees.spec.js"}