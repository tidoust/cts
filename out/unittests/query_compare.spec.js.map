{"version":3,"sources":["../../src/unittests/query_compare.spec.ts"],"names":["description","compareQueries","Ordering","TestQuerySingleCase","TestQueryMultiFile","TestQueryMultiTest","TestQueryMultiCase","makeTestGroup","UnitTest","F","expectQ","a","exp","b","expOrdering","expInvOrdering","StrictSubset","StrictSuperset","Equal","Unordered","act","expect","expectWellOrdered","qs","i","length","j","expectUnordered","g","test","fn","t","x","y"],"mappings":"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","sourcesContent":["export const description = `\nTests for TestQuery comparison\n`;\n\nimport { compareQueries, Ordering } from '../common/framework/query/compare.js';\nimport {\n  TestQuery,\n  TestQuerySingleCase,\n  TestQueryMultiFile,\n  TestQueryMultiTest,\n  TestQueryMultiCase,\n} from '../common/framework/query/query.js';\nimport { makeTestGroup } from '../common/framework/test_group.js';\n\nimport { UnitTest } from './unit_test.js';\n\nclass F extends UnitTest {\n  expectQ(a: TestQuery, exp: '<' | '=' | '>' | '!', b: TestQuery) {\n    const [expOrdering, expInvOrdering] =\n      exp === '<'\n        ? [Ordering.StrictSubset, Ordering.StrictSuperset]\n        : exp === '='\n        ? [Ordering.Equal, Ordering.Equal]\n        : exp === '>'\n        ? [Ordering.StrictSuperset, Ordering.StrictSubset]\n        : [Ordering.Unordered, Ordering.Unordered];\n    {\n      const act = compareQueries(a, b);\n      this.expect(act === expOrdering, `${a} ${b}  got ${act}, exp ${expOrdering}`);\n    }\n    {\n      const act = compareQueries(a, b);\n      this.expect(act === expOrdering, `${b} ${a}  got ${act}, exp ${expInvOrdering}`);\n    }\n  }\n\n  expectWellOrdered(...qs: TestQuery[]) {\n    for (let i = 0; i < qs.length; ++i) {\n      this.expectQ(qs[i], '=', qs[i]);\n      for (let j = i + 1; j < qs.length; ++j) {\n        this.expectQ(qs[i], '>', qs[j]);\n      }\n    }\n  }\n\n  expectUnordered(...qs: TestQuery[]) {\n    for (let i = 0; i < qs.length; ++i) {\n      this.expectQ(qs[i], '=', qs[i]);\n      for (let j = i + 1; j < qs.length; ++j) {\n        this.expectQ(qs[i], '!', qs[j]);\n      }\n    }\n  }\n}\n\nexport const g = makeTestGroup(F);\n\n// suite:*  >  suite:a,*  >  suite:a,b,*   >  suite:a,b:*\n// suite:a,b:*  >  suite:a,b:c,*  >  suite:a,b:c,d,*  >  suite:a,b:c,d:*\n// suite:a,b:c,d:*  >  suite:a,b:c,d:x=1;*  >  suite:a,b:c,d:x=1;y=2;*  >  suite:a,b:c,d:x=1;y=2\n// suite:a;* (unordered) suite:b;*\ng.test('well_ordered').fn(t => {\n  t.expectWellOrdered(\n    new TestQueryMultiFile('suite', []),\n    new TestQueryMultiFile('suite', ['a']),\n    new TestQueryMultiFile('suite', ['a', 'b']),\n    new TestQueryMultiTest('suite', ['a', 'b'], []),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], {}),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 })\n  );\n  t.expectWellOrdered(\n    new TestQueryMultiFile('suite', []),\n    new TestQueryMultiFile('suite', ['a']),\n    new TestQueryMultiFile('suite', ['a', 'b']),\n    new TestQueryMultiTest('suite', ['a', 'b'], []),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], {}),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], {})\n  );\n});\n\ng.test('unordered').fn(t => {\n  t.expectUnordered(\n    new TestQueryMultiFile('suite', ['a']), //\n    new TestQueryMultiFile('suite', ['x'])\n  );\n  t.expectUnordered(\n    new TestQueryMultiFile('suite', ['a', 'b']),\n    new TestQueryMultiFile('suite', ['a', 'x'])\n  );\n  t.expectUnordered(\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['x']),\n    new TestQueryMultiTest('suite', ['a'], []),\n    new TestQueryMultiTest('suite', ['a', 'x'], [])\n  );\n  t.expectUnordered(\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'x']),\n    new TestQueryMultiTest('suite', ['a'], []),\n    new TestQueryMultiTest('suite', ['a', 'x'], [])\n  );\n  t.expectUnordered(\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'd']),\n    new TestQueryMultiTest('suite', ['a', 'b'], ['c', 'x']),\n    new TestQueryMultiTest('suite', ['a'], []),\n    new TestQueryMultiTest('suite', ['a', 'x'], ['c'])\n  );\n  t.expectUnordered(\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 9 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c'], { x: 9 })\n  );\n  t.expectUnordered(\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 8 }),\n    new TestQueryMultiCase('suite', ['a', 'b'], ['c'], { x: 1, y: 8 })\n  );\n  t.expectUnordered(\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 2 }),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c', 'd'], { x: 1, y: 8 }),\n    new TestQuerySingleCase('suite', ['a', 'b'], ['c'], { x: 1, y: 8 })\n  );\n  t.expectUnordered(\n    new TestQuerySingleCase('suite1', ['bar', 'buzz', 'buzz'], ['zap'], {}),\n    new TestQueryMultiTest('suite1', ['bar'], [])\n  );\n});\n"],"file":"query_compare.spec.js"}