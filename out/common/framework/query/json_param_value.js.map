{"version":3,"sources":["../../../../src/common/framework/query/json_param_value.ts"],"names":["assert","jsUndefinedMagicValue","stringifyParamValue","value","JSON","stringify","k","v","undefined","parseParamValue","s","parse"],"mappings":";;GACA,SAASA,MAAT,QAAuB,iBAAvB;AAEA;AACA;AACA,MAAMC,qBAAqB,GAAG,SAA9B;;AAEA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAA2D;AAChE,SAAOC,IAAI,CAACC,SAAL,CAAeF,KAAf,EAAsB,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACrC;AACAP,IAAAA,MAAM,CAACO,CAAC,KAAKN,qBAAP,CAAN;;AAEA,WAAOM,CAAC,KAAKC,SAAN,GAAkBP,qBAAlB,GAA0CM,CAAjD;AACD,GALM,CAAP;AAMD;;AAED,OAAO,SAASE,eAAT,CAAyBC,CAAzB,EAAmD;AACxD,SAAON,IAAI,CAACO,KAAL,CAAWD,CAAX,EAAc,CAACJ,CAAD,EAAIC,CAAJ,KAAWA,CAAC,KAAKN,qBAAN,GAA8BO,SAA9B,GAA0CD,CAAnE,CAAP;AACD","sourcesContent":["import { ParamArgument } from '../params_utils.js';\nimport { assert } from '../util/util.js';\n\n// JSON can't represent `undefined` and by default stores it as `null`.\n// Instead, store `undefined` as this magic string value in JSON.\nconst jsUndefinedMagicValue = '_undef_';\n\nexport function stringifyParamValue(value: ParamArgument): string {\n  return JSON.stringify(value, (k, v) => {\n    // Make sure no one actually uses the magic value as a parameter.\n    assert(v !== jsUndefinedMagicValue);\n\n    return v === undefined ? jsUndefinedMagicValue : v;\n  });\n}\n\nexport function parseParamValue(s: string): ParamArgument {\n  return JSON.parse(s, (k, v) => (v === jsUndefinedMagicValue ? undefined : v));\n}\n"],"file":"json_param_value.js"}