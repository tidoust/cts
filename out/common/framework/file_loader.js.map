{"version":3,"sources":["../../../src/common/framework/file_loader.ts"],"names":["parseQuery","loadTreeForQuery","TestFileLoader","importSpecFile","suite","path","import","join","loadTree","query","subqueriesToExpand","map","q","loadCases","tree","iterateLeaves","DefaultTestFileLoader","listing"],"mappings":";;GAAA,SAASA,UAAT,QAA2B,uBAA3B;;AAIA,SAASC,gBAAT,QAAyD,WAAzD;;AAEA;AACA;AACA;;;;;;;;;;;AAWA;AACA,OAAO,MAAeC,cAAf,CAA8B;;;;AAInCC,EAAAA,cAAc,CAACC,KAAD,EAAgBC,IAAhB,EAAmD;AAC/D,WAAO,KAAKC,MAAL,CAAa,GAAEF,KAAM,IAAGC,IAAI,CAACE,IAAL,CAAU,GAAV,CAAe,UAAvC,CAAP;AACD;;AAED,QAAMC,QAAN,CAAeC,KAAf,EAAiCC,kBAA4B,GAAG,EAAhE,EAAuF;AACrF,WAAOT,gBAAgB;AACrB,QADqB;AAErBQ,IAAAA,KAFqB;AAGrBC,IAAAA,kBAAkB,CAACC,GAAnB,CAAuBC,CAAC,IAAIZ,UAAU,CAACY,CAAD,CAAtC,CAHqB,CAAvB;;AAKD;;AAED,QAAMC,SAAN,CAAgBJ,KAAhB,EAA2E;AACzE,UAAMK,IAAI,GAAG,MAAM,KAAKN,QAAL,CAAcC,KAAd,CAAnB;AACA,WAAOK,IAAI,CAACC,aAAL,EAAP;AACD,GAnBkC;;;AAsBrC,OAAO,MAAMC,qBAAN,SAAoCd,cAApC,CAAmD;AACxD,QAAMe,OAAN,CAAcb,KAAd,EAAwD;AACtD,WAAO,CAAE,MAAM,OAAQ,SAAQA,KAAM,aAAtB,CAAR,EAA6Da,OAApE;AACD;;AAEDX,EAAAA,MAAM,CAACD,IAAD,EAAkC;AACtC,WAAO,OAAQ,SAAQA,IAAK,EAArB,CAAP;AACD,GAPuD","sourcesContent":["import { parseQuery } from './query/parseQuery.js';\nimport { TestQuery } from './query/query.js';\nimport { RunCaseIterable } from './test_group.js';\nimport { TestSuiteListing } from './test_suite_listing.js';\nimport { loadTreeForQuery, TestTree, TestTreeLeaf } from './tree.js';\n\n// A listing file, e.g. either of:\n// - `src/webgpu/listing.ts` (which is dynamically computed, has a Promise<TestSuiteListing>)\n// - `out/webgpu/listing.js` (which is pre-baked, has a TestSuiteListing)\ninterface ListingFile {\n  listing: Promise<TestSuiteListing> | TestSuiteListing;\n}\n\n// A .spec.ts file, as imported.\nexport interface SpecFile {\n  readonly description: string;\n  readonly g: RunCaseIterable;\n}\n\n// Base class for DefaultTestFileLoader and FakeTestFileLoader.\nexport abstract class TestFileLoader {\n  abstract listing(suite: string): Promise<TestSuiteListing>;\n  protected abstract import(path: string): Promise<SpecFile>;\n\n  importSpecFile(suite: string, path: string[]): Promise<SpecFile> {\n    return this.import(`${suite}/${path.join('/')}.spec.js`);\n  }\n\n  async loadTree(query: TestQuery, subqueriesToExpand: string[] = []): Promise<TestTree> {\n    return loadTreeForQuery(\n      this,\n      query,\n      subqueriesToExpand.map(q => parseQuery(q))\n    );\n  }\n\n  async loadCases(query: TestQuery): Promise<IterableIterator<TestTreeLeaf>> {\n    const tree = await this.loadTree(query);\n    return tree.iterateLeaves();\n  }\n}\n\nexport class DefaultTestFileLoader extends TestFileLoader {\n  async listing(suite: string): Promise<TestSuiteListing> {\n    return ((await import(`../../${suite}/listing.js`)) as ListingFile).listing;\n  }\n\n  import(path: string): Promise<SpecFile> {\n    return import(`../../${path}`);\n  }\n}\n"],"file":"file_loader.js"}