{"version":3,"sources":["../../../src/common/runtime/standalone.ts"],"names":["DefaultTestFileLoader","Logger","parseQuery","assert","optionEnabled","TestWorker","window","onbeforeunload","haveSomeResults","undefined","runnow","debug","logger","worker","resultsVis","document","getElementById","resultsJSON","makeTreeNodeHTML","tree","parentLevel","makeSubtreeHTML","makeCaseHTML","t","div","$","addClass","name","query","toString","runSubtree","rec","res","record","run","casetime","text","timems","toFixed","attr","status","logs","caselogs","empty","l","caselog","appendTo","on","console","log","toJSON","casehead","makeTreeNodeHeaderHTML","checked","show","hide","append","html","n","subtreeHTML","makeSubtreeChildrenHTML","children","values","level","header","classList","add","runSubtreeFns","subtree","push","onChange","isLeaf","href","checkbox","change","rootQueryLevel","prop","runtext","updateJSON","nodetitle","nodename","readableRelativeName","val","description","textContent","asJSON","loader","qs","URLSearchParams","location","search","getAll","length","url","protocol","host","pathname","map","q","join","history","replaceState","rootQuery","loadTree","dissolveLevelBoundaries","el","root","trigger"],"mappings":"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","sourcesContent":["// Implements the standalone test runner (see also: /standalone/index.html).\n\nimport { DefaultTestFileLoader } from '../framework/file_loader.js';\nimport { Logger } from '../framework/logging/logger.js';\nimport { parseQuery } from '../framework/query/parseQuery.js';\nimport { TestQueryLevel } from '../framework/query/query.js';\nimport { TestTreeNode, TestSubtree, TestTreeLeaf } from '../framework/tree.js';\nimport { assert } from '../framework/util/util.js';\n\nimport { optionEnabled } from './helper/options.js';\nimport { TestWorker } from './helper/test_worker.js';\n\nwindow.onbeforeunload = () => {\n  // Prompt user before reloading if there are any results\n  return haveSomeResults ? false : undefined;\n};\n\nlet haveSomeResults = false;\n\nconst runnow = optionEnabled('runnow');\nconst debug = optionEnabled('debug');\n\nconst logger = new Logger(debug);\n\nconst worker = optionEnabled('worker') ? new TestWorker(debug) : undefined;\n\nconst resultsVis = document.getElementById('resultsVis')!;\nconst resultsJSON = document.getElementById('resultsJSON')!;\n\ntype RunSubtree = () => Promise<void>;\n\n// DOM generation\n\nfunction makeTreeNodeHTML(\n  tree: TestTreeNode,\n  parentLevel: TestQueryLevel\n): [HTMLElement, RunSubtree] {\n  if ('children' in tree) {\n    return makeSubtreeHTML(tree, parentLevel);\n  } else {\n    return makeCaseHTML(tree);\n  }\n}\n\nfunction makeCaseHTML(t: TestTreeLeaf): [HTMLElement, RunSubtree] {\n  const div = $('<div>').addClass('testcase');\n\n  const name = t.query.toString();\n  const runSubtree = async () => {\n    haveSomeResults = true;\n    const [rec, res] = logger.record(name);\n    if (worker) {\n      await worker.run(rec, name);\n    } else {\n      await t.run(rec);\n    }\n\n    casetime.text(res.timems.toFixed(4) + ' ms');\n\n    div.attr('data-status', res.status);\n\n    if (res.logs) {\n      caselogs.empty();\n      for (const l of res.logs) {\n        const caselog = $('<div>').addClass('testcaselog').appendTo(caselogs);\n        $('<button>')\n          .addClass('testcaselogbtn')\n          .attr('alt', 'Log stack to console')\n          .attr('title', 'Log stack to console')\n          .appendTo(caselog)\n          .on('click', () => {\n            /* eslint-disable-next-line no-console */\n            console.log(l);\n          });\n        $('<pre>').addClass('testcaselogtext').appendTo(caselog).text(l.toJSON());\n      }\n    }\n  };\n\n  const caselogs = $('<div>').addClass('testcaselogs');\n  const casehead = makeTreeNodeHeaderHTML(t, runSubtree, 2, checked => {\n    checked ? caselogs.show() : caselogs.hide();\n  });\n  div.append(casehead);\n  const casetime = $('<div>').addClass('testcasetime').html('ms').appendTo(casehead);\n  caselogs.appendTo(div);\n\n  return [div[0], runSubtree];\n}\n\nfunction makeSubtreeHTML(n: TestSubtree, parentLevel: TestQueryLevel): [HTMLElement, RunSubtree] {\n  const div = $('<div>').addClass('subtree');\n\n  const subtreeHTML = $('<div>').addClass('subtreechildren');\n  const runSubtree = makeSubtreeChildrenHTML(subtreeHTML[0], n.children.values(), n.query.level);\n\n  const header = makeTreeNodeHeaderHTML(n, runSubtree, parentLevel, checked => {\n    checked ? subtreeHTML.show() : subtreeHTML.hide();\n  });\n\n  div.append(header);\n  div.append(subtreeHTML);\n\n  div[0].classList.add(['', 'multifile', 'multitest', 'multicase'][n.query.level]);\n\n  return [div[0], runSubtree];\n}\n\nfunction makeSubtreeChildrenHTML(\n  div: HTMLElement,\n  children: Iterable<TestTreeNode>,\n  parentLevel: TestQueryLevel\n): RunSubtree {\n  const runSubtreeFns: RunSubtree[] = [];\n  for (const subtree of children) {\n    const [subtreeHTML, runSubtree] = makeTreeNodeHTML(subtree, parentLevel);\n    div.append(subtreeHTML);\n    runSubtreeFns.push(runSubtree);\n  }\n\n  return async () => {\n    for (const runSubtree of runSubtreeFns) {\n      await runSubtree();\n    }\n  };\n}\n\nfunction makeTreeNodeHeaderHTML(\n  n: TestTreeNode,\n  runSubtree: RunSubtree,\n  parentLevel: TestQueryLevel,\n  onChange: (checked: boolean) => void\n): HTMLElement {\n  const isLeaf = 'run' in n;\n  const div = $('<div>').addClass('nodeheader');\n\n  const href = `?${worker ? 'worker&' : ''}${debug ? 'debug&' : ''}q=${n.query.toString()}`;\n  if (onChange) {\n    const checkbox = $('<input>')\n      .attr('type', 'checkbox')\n      .addClass('collapsebtn')\n      .change(function (this) {\n        onChange((this as HTMLInputElement).checked);\n      })\n      .attr('alt', 'Expand')\n      .attr('title', 'Expand')\n      .appendTo(div);\n\n    // Collapse s:f:* or s:f:t:* or s:f:t:c by default.\n    if (n.query.level > rootQueryLevel && n.query.level > parentLevel) {\n      onChange(false);\n    } else {\n      checkbox.prop('checked', true); // (does not fire onChange)\n    }\n  }\n  const runtext = isLeaf ? 'Run case' : 'Run subtree';\n  $('<button>')\n    .addClass(isLeaf ? 'leafrun' : 'subtreerun')\n    .attr('alt', runtext)\n    .attr('title', runtext)\n    .on('click', async () => {\n      await runSubtree();\n      updateJSON();\n    })\n    .appendTo(div);\n  $('<a>')\n    .addClass('nodelink')\n    .attr('href', href)\n    .attr('alt', 'Open')\n    .attr('title', 'Open')\n    .appendTo(div);\n  const nodetitle = $('<div>').addClass('nodetitle').appendTo(div);\n  const nodename = $('<span>')\n    .addClass('nodename')\n    .text(n.readableRelativeName)\n    .appendTo(nodetitle);\n  if ('run' in n) {\n    nodename.addClass('leafname');\n  }\n  $('<input>')\n    .attr('type', 'text')\n    .prop('readonly', true)\n    .addClass('nodequery')\n    .val(n.query.toString())\n    .appendTo(nodetitle);\n  if ('description' in n && n.description) {\n    $('<pre>') //\n      .addClass('nodedescription')\n      .text(n.description)\n      .appendTo(nodetitle);\n  }\n  return div[0];\n}\n\nfunction updateJSON(): void {\n  resultsJSON.textContent = logger.asJSON(2);\n}\n\nlet rootQueryLevel: TestQueryLevel = 1;\n\n(async () => {\n  const loader = new DefaultTestFileLoader();\n\n  // TODO: start populating page before waiting for everything to load?\n  const qs = new URLSearchParams(window.location.search).getAll('q');\n  if (qs.length === 0) {\n    qs.push('webgpu:*');\n  }\n\n  // Update the URL bar to match the exact current options.\n  {\n    let url = window.location.protocol + '//' + window.location.host + window.location.pathname;\n    url +=\n      '?' +\n      new URLSearchParams([\n        ['runnow', runnow ? '1' : '0'],\n        ['worker', worker ? '1' : '0'],\n        ['debug', debug ? '1' : '0'],\n      ]).toString() +\n      '&' +\n      qs.map(q => 'q=' + q).join('&');\n    window.history.replaceState(null, '', url);\n  }\n\n  assert(qs.length === 1, 'currently, there must be exactly one ?q=');\n  const rootQuery = parseQuery(qs[0]);\n  rootQueryLevel = rootQuery.level;\n  const tree = await loader.loadTree(rootQuery);\n\n  tree.dissolveLevelBoundaries();\n\n  const [el, runSubtree] = makeSubtreeHTML(tree.root, 1);\n  resultsVis.append(el);\n\n  $('#expandall').change(function (this) {\n    const checked = (this as HTMLInputElement).checked;\n    $('.collapsebtn').prop('checked', checked).trigger('change');\n  });\n\n  if (runnow) {\n    runSubtree();\n  }\n})();\n"],"file":"standalone.js"}