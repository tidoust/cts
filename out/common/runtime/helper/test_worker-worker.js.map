{"version":3,"sources":["../../../../src/common/runtime/helper/test_worker-worker.ts"],"names":["DefaultTestFileLoader","Logger","parseQuery","assert","loader","self","onmessage","ev","query","data","debug","log","testcases","Array","from","loadCases","length","testcase","rec","result","record","toString","run","postMessage"],"mappings":";;GAAA,SAASA,qBAAT,QAAsC,gCAAtC,CACA,SAASC,MAAT,QAAuB,mCAAvB,CACA,SAASC,UAAT,QAA2B,qCAA3B;AACA,SAASC,MAAT,QAAuB,8BAAvB;;;AAGyB;;AAEzB,MAAMC,MAAM,GAAG,IAAIJ,qBAAJ,EAAf;;AAEAK,IAAI,CAACC,SAAL,GAAiB,MAAOC,EAAP,IAA4B;AAC3C,QAAMC,KAAa,GAAGD,EAAE,CAACE,IAAH,CAAQD,KAA9B;AACA,QAAME,KAAc,GAAGH,EAAE,CAACE,IAAH,CAAQC,KAA/B;;AAEA,QAAMC,GAAG,GAAG,IAAIV,MAAJ,CAAWS,KAAX,CAAZ;;AAEA,QAAME,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW,MAAMV,MAAM,CAACW,SAAP,CAAiBb,UAAU,CAACM,KAAD,CAA3B,CAAjB,CAAlB;AACAL,EAAAA,MAAM,CAACS,SAAS,CAACI,MAAV,KAAqB,CAAtB,EAAyB,qCAAzB,CAAN;;AAEA,QAAMC,QAAQ,GAAGL,SAAS,CAAC,CAAD,CAA1B;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBR,GAAG,CAACS,MAAJ,CAAWH,QAAQ,CAACT,KAAT,CAAea,QAAf,EAAX,CAAtB;AACA,QAAMJ,QAAQ,CAACK,GAAT,CAAaJ,GAAb,CAAN;;AAEAb,EAAAA,IAAI,CAACkB,WAAL,CAAiB,EAAEf,KAAF,EAASW,MAAT,EAAjB;AACD,CAdD","sourcesContent":["import { DefaultTestFileLoader } from '../../framework/file_loader.js';\nimport { Logger } from '../../framework/logging/logger.js';\nimport { parseQuery } from '../../framework/query/parseQuery.js';\nimport { assert } from '../../framework/util/util.js';\n\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\ndeclare const self: any; // should be DedicatedWorkerGlobalScope\n\nconst loader = new DefaultTestFileLoader();\n\nself.onmessage = async (ev: MessageEvent) => {\n  const query: string = ev.data.query;\n  const debug: boolean = ev.data.debug;\n\n  const log = new Logger(debug);\n\n  const testcases = Array.from(await loader.loadCases(parseQuery(query)));\n  assert(testcases.length === 1, 'worker query resulted in != 1 cases');\n\n  const testcase = testcases[0];\n  const [rec, result] = log.record(testcase.query.toString());\n  await testcase.run(rec);\n\n  self.postMessage({ query, result });\n};\n"],"file":"test_worker-worker.js"}