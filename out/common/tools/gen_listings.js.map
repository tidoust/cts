{"version":3,"sources":["../../../src/common/tools/gen_listings.ts"],"names":["fs","path","process","crawl","usage","rc","console","error","exit","argv","length","myself","existsSync","suite","slice","listing","outFile","normalize","mkdirSync","recursive","writeFileSync","JSON","stringify","undefined","unlinkSync","ex"],"mappings":";;GAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB,CACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB,CACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;;AAEA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,SAASC,KAAT,CAAeC,EAAf,EAAiC;AAC/BC,EAAAA,OAAO,CAACC,KAAR,CAAc,QAAd;AACAD,EAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd;AACAD,EAAAA,OAAO,CAACC,KAAR,CAAc,uCAAd;AACAL,EAAAA,OAAO,CAACM,IAAR,CAAaH,EAAb;AACD;;AAED,IAAIH,OAAO,CAACO,IAAR,CAAaC,MAAb,IAAuB,CAA3B,EAA8B;AAC5BN,EAAAA,KAAK,CAAC,CAAD,CAAL;AACD;;AAED,MAAMO,MAAM,GAAG,kCAAf;AACA,IAAI,CAACX,EAAE,CAACY,UAAH,CAAcD,MAAd,CAAL,EAA4B;AAC1BL,EAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd;AACAH,EAAAA,KAAK,CAAC,CAAD,CAAL;AACD;;AAED,CAAC,YAAY;AACX,OAAK,MAAMS,KAAX,IAAoBX,OAAO,CAACO,IAAR,CAAaK,KAAb,CAAmB,CAAnB,CAApB,EAA2C;AACzC,UAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACU,KAAD,CAA3B;;AAEA,UAAMG,OAAO,GAAGf,IAAI,CAACgB,SAAL,CAAgB,OAAMJ,KAAM,aAA5B,CAAhB;AACAb,IAAAA,EAAE,CAACkB,SAAH,CAAc,OAAML,KAAM,EAA1B,EAA6B,EAAEM,SAAS,EAAE,IAAb,EAA7B;AACAnB,IAAAA,EAAE,CAACoB,aAAH;AACEJ,IAAAA,OADF;AAEG;uCACgCL,MAAO;;yBAErBU,IAAI,CAACC,SAAL,CAAeP,OAAf,EAAwBQ,SAAxB,EAAmC,CAAnC,CAAsC;CAL3D;;AAQA,QAAI;AACFvB,MAAAA,EAAE,CAACwB,UAAH,CAAcR,OAAO,GAAG,MAAxB;;AAED,KAHD,CAGE,OAAOS,EAAP,EAAW,CAAE;AAChB;AACF,CAnBD","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport * as process from 'process';\n\nimport { crawl } from './crawl.js';\n\nfunction usage(rc: number): void {\n  console.error('Usage:');\n  console.error('  tools/gen_listings [SUITES...]');\n  console.error('  tools/gen_listings webgpu unittests');\n  process.exit(rc);\n}\n\nif (process.argv.length <= 2) {\n  usage(0);\n}\n\nconst myself = 'src/common/tools/gen_listings.ts';\nif (!fs.existsSync(myself)) {\n  console.error('Must be run from repository root');\n  usage(1);\n}\n\n(async () => {\n  for (const suite of process.argv.slice(2)) {\n    const listing = await crawl(suite);\n\n    const outFile = path.normalize(`out/${suite}/listing.js`);\n    fs.mkdirSync(`out/${suite}`, { recursive: true });\n    fs.writeFileSync(\n      outFile,\n      `\\\n// AUTO-GENERATED - DO NOT EDIT. See ${myself}.\n\nexport const listing = ${JSON.stringify(listing, undefined, 2)};\n`\n    );\n    try {\n      fs.unlinkSync(outFile + '.map');\n      /* eslint-disable-next-line no-empty */\n    } catch (ex) {}\n  }\n})();\n"],"file":"gen_listings.js"}