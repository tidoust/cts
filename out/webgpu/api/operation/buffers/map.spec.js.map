{"version":3,"sources":["../../../../../src/webgpu/api/operation/buffers/map.spec.ts"],"names":["description","pbool","params","makeTestGroup","assert","MappingTest","g","kCases","size","range","undefined","reifyMapRange","bufferSize","offset","test","fn","t","rangeOffset","rangeSize","buffer","device","createBuffer","usage","GPUBufferUsage","COPY_SRC","MAP_WRITE","mapAsync","GPUMapMode","WRITE","arrayBuffer","getMappedRange","checkMapWrite","mappedAtCreation","COPY_DST","MAP_READ","init","byteLength","expected","Uint32Array","ArrayBuffer","data","i","length","unmap","READ","actual","Uint8Array","expectBuffer","combine","mappable"],"mappings":"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","sourcesContent":["export const description = '';\n\nimport { pbool, params } from '../../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../../common/framework/test_group.js';\nimport { assert } from '../../../../common/framework/util/util.js';\n\nimport { MappingTest } from './mapping_test.js';\n\nexport const g = makeTestGroup(MappingTest);\n\nconst kCases = [\n  { size: 0, range: [] },\n  { size: 0, range: [undefined] },\n  { size: 0, range: [undefined, undefined] },\n  { size: 0, range: [0] },\n  { size: 0, range: [0, undefined] },\n  { size: 0, range: [0, 0] },\n  { size: 12, range: [] },\n  { size: 12, range: [undefined] },\n  { size: 12, range: [undefined, undefined] },\n  { size: 12, range: [0] },\n  { size: 12, range: [0, undefined] },\n  { size: 12, range: [0, 12] },\n  { size: 12, range: [0, 0] },\n  { size: 12, range: [8] },\n  { size: 12, range: [8, undefined] },\n  { size: 12, range: [8, 4] },\n  { size: 28, range: [8, 8] },\n  { size: 28, range: [8, 12] },\n  { size: 512 * 1024, range: [] },\n];\n\nfunction reifyMapRange(bufferSize: number, range: (number | undefined)[]): [number, number] {\n  const offset = range[0] ?? 0;\n  return [offset, range[1] ?? bufferSize - offset];\n}\n\ng.test('mapAsync,write')\n  .params(kCases)\n  .fn(async t => {\n    const { size, range } = t.params;\n    const [rangeOffset, rangeSize] = reifyMapRange(size, range);\n\n    const buffer = t.device.createBuffer({\n      size,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.MAP_WRITE,\n    });\n\n    await buffer.mapAsync(GPUMapMode.WRITE);\n    const arrayBuffer = buffer.getMappedRange(...range);\n    t.checkMapWrite(buffer, rangeOffset, arrayBuffer, rangeSize);\n  });\n\ng.test('mapAsync,read')\n  .params(kCases)\n  .fn(async t => {\n    const { size, range } = t.params;\n    const [, rangeSize] = reifyMapRange(size, range);\n\n    const buffer = t.device.createBuffer({\n      mappedAtCreation: true,\n      size,\n      usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,\n    });\n    const init = buffer.getMappedRange(...range);\n\n    assert(init.byteLength === rangeSize);\n    const expected = new Uint32Array(new ArrayBuffer(rangeSize));\n    const data = new Uint32Array(init);\n    for (let i = 0; i < data.length; ++i) {\n      data[i] = expected[i] = i + 1;\n    }\n    buffer.unmap();\n\n    await buffer.mapAsync(GPUMapMode.READ);\n    const actual = new Uint8Array(buffer.getMappedRange(...range));\n    t.expectBuffer(actual, new Uint8Array(expected.buffer));\n  });\n\ng.test('mappedAtCreation')\n  .params(\n    params()\n      .combine(kCases) //\n      .combine(pbool('mappable'))\n  )\n  .fn(async t => {\n    const { size, range, mappable } = t.params;\n    const [, rangeSize] = reifyMapRange(size, range);\n\n    const buffer = t.device.createBuffer({\n      mappedAtCreation: true,\n      size,\n      usage: GPUBufferUsage.COPY_SRC | (mappable ? GPUBufferUsage.MAP_WRITE : 0),\n    });\n    const arrayBuffer = buffer.getMappedRange(...range);\n    t.checkMapWrite(buffer, range[0] ?? 0, arrayBuffer, rangeSize);\n  });\n"],"file":"map.spec.js"}