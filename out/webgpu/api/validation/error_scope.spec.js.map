{"version":3,"sources":["../../../../src/webgpu/api/validation/error_scope.spec.ts"],"names":["description","Fixture","getGPU","makeTestGroup","assert","raceWithRejectOnTimeout","F","undefined","device","_device","init","gpu","adapter","requestAdapter","requestDevice","createErrorBuffer","createBuffer","size","usage","defaultQueue","submit","expectUncapturedError","fn","immediateAsyncExpectation","TIMEOUT_IN_MS","promise","Promise","resolve","eventListener","event","debug","error","addEventListener","once","g","test","t","pushErrorScope","popErrorScope","expect","GPUValidationError","uncapturedErrorEvent","shouldReject","promises","i","push","errors","all","every","e"],"mappings":"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","sourcesContent":["export const description = `\nerror scope validation tests.\n`;\n\nimport { Fixture } from '../../../common/framework/fixture.js';\nimport { getGPU } from '../../../common/framework/gpu/implementation.js';\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { assert, raceWithRejectOnTimeout } from '../../../common/framework/util/util.js';\n\nclass F extends Fixture {\n  _device: GPUDevice | undefined = undefined;\n\n  get device(): GPUDevice {\n    assert(this._device !== undefined);\n    return this._device;\n  }\n\n  async init(): Promise<void> {\n    super.init();\n    const gpu = getGPU();\n    const adapter = await gpu.requestAdapter();\n    assert(adapter !== null);\n    const device = await adapter.requestDevice();\n    assert(device !== null);\n    this._device = device;\n  }\n\n  createErrorBuffer(): void {\n    this.device.createBuffer({\n      size: 1024,\n      usage: 0xffff, // Invalid GPUBufferUsage\n    });\n    // TODO: Remove when chrome does it automatically.\n    this.device.defaultQueue.submit([]);\n  }\n\n  // Expect an uncapturederror event to occur. Note: this MUST be awaited, because\n  // otherwise it could erroneously pass by capturing an error from later in the test.\n  async expectUncapturedError(fn: Function): Promise<GPUUncapturedErrorEvent> {\n    return this.immediateAsyncExpectation(() => {\n      // TODO: Make arbitrary timeout value a test runner variable\n      const TIMEOUT_IN_MS = 1000;\n\n      const promise: Promise<GPUUncapturedErrorEvent> = new Promise(resolve => {\n        const eventListener = ((event: GPUUncapturedErrorEvent) => {\n          this.debug(`Got uncaptured error event with ${event.error}`);\n          resolve(event);\n        }) as EventListener;\n\n        this.device.addEventListener('uncapturederror', eventListener, { once: true });\n      });\n\n      fn();\n\n      return raceWithRejectOnTimeout(\n        promise,\n        TIMEOUT_IN_MS,\n        'Timeout occurred waiting for uncaptured error'\n      );\n    });\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('simple_case_where_the_error_scope_catches_an_error').fn(async t => {\n  t.device.pushErrorScope('validation');\n\n  t.createErrorBuffer();\n\n  const error = await t.device.popErrorScope();\n  t.expect(error instanceof GPUValidationError);\n});\n\ng.test('errors_bubble_to_the_parent_scope_if_not_handled_by_the_current_scope').fn(async t => {\n  t.device.pushErrorScope('validation');\n  t.device.pushErrorScope('out-of-memory');\n\n  t.createErrorBuffer();\n\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error === null);\n  }\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error instanceof GPUValidationError);\n  }\n});\n\ng.test('if_an_error_scope_matches_an_error_it_does_not_bubble_to_the_parent_scope').fn(async t => {\n  t.device.pushErrorScope('validation');\n  t.device.pushErrorScope('validation');\n\n  t.createErrorBuffer();\n\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error instanceof GPUValidationError);\n  }\n  {\n    const error = await t.device.popErrorScope();\n    t.expect(error === null);\n  }\n});\n\ng.test('if_no_error_scope_handles_an_error_it_fires_an_uncapturederror_event').fn(async t => {\n  t.device.pushErrorScope('out-of-memory');\n\n  const uncapturedErrorEvent = await t.expectUncapturedError(() => {\n    t.createErrorBuffer();\n  });\n  t.expect(uncapturedErrorEvent.error instanceof GPUValidationError);\n\n  const error = await t.device.popErrorScope();\n  t.expect(error === null);\n});\n\ng.test('push,popping_sibling_error_scopes_must_be_balanced').fn(async t => {\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n\n  const promises = [];\n  for (let i = 0; i < 1000; i++) {\n    t.device.pushErrorScope('validation');\n    promises.push(t.device.popErrorScope());\n  }\n  const errors = await Promise.all(promises);\n  t.expect(errors.every(e => e === null));\n\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n});\n\ng.test('push,popping_nested_error_scopes_must_be_balanced').fn(async t => {\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n\n  const promises = [];\n  for (let i = 0; i < 1000; i++) {\n    t.device.pushErrorScope('validation');\n  }\n  for (let i = 0; i < 1000; i++) {\n    promises.push(t.device.popErrorScope());\n  }\n  const errors = await Promise.all(promises);\n  t.expect(errors.every(e => e === null));\n\n  {\n    const promise = t.device.popErrorScope();\n    t.shouldReject('OperationError', promise);\n  }\n});\n"],"file":"error_scope.spec.js"}