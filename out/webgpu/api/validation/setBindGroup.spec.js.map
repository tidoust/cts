{"version":3,"sources":["../../../../src/webgpu/api/validation/setBindGroup.spec.ts"],"names":["description","poptions","params","makeTestGroup","ValidationTest","F","makeAttachmentTexture","device","createTexture","format","size","width","height","depth","usage","GPUTextureUsage","OUTPUT_ATTACHMENT","testComputePass","bindGroup","dynamicOffsets","encoder","createCommandEncoder","computePass","beginComputePass","setBindGroup","endPass","finish","testRenderPass","renderPass","beginRenderPass","colorAttachments","attachment","createView","loadValue","r","g","b","a","testRenderBundle","createRenderBundleEncoder","colorFormats","test","fn","t","bindGroupLayout","createBindGroupLayout","entries","createBindGroup","layout","type","expectValidationError","fail","combine","_success","MIN_DYNAMIC_BUFFER_OFFSET_ALIGNMENT","BINDING_SIZE","binding","visibility","GPUShaderStage","COMPUTE","FRAGMENT","hasDynamicOffset","uniformBuffer","createBuffer","GPUBufferUsage","UNIFORM","storageBuffer","STORAGE","resource","buffer"],"mappings":"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","sourcesContent":["export const description = `\nsetBindGroup validation tests.\n`;\n\nimport { poptions, params } from '../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nclass F extends ValidationTest {\n  makeAttachmentTexture(): GPUTexture {\n    return this.device.createTexture({\n      format: 'rgba8unorm',\n      size: { width: 16, height: 16, depth: 1 },\n      usage: GPUTextureUsage.OUTPUT_ATTACHMENT,\n    });\n  }\n\n  testComputePass(bindGroup: GPUBindGroup, dynamicOffsets: number[]): void {\n    const encoder = this.device.createCommandEncoder();\n    const computePass = encoder.beginComputePass();\n    computePass.setBindGroup(0, bindGroup, dynamicOffsets);\n    computePass.endPass();\n    encoder.finish();\n  }\n\n  testRenderPass(bindGroup: GPUBindGroup, dynamicOffsets: number[]): void {\n    const encoder = this.device.createCommandEncoder();\n    const renderPass = encoder.beginRenderPass({\n      colorAttachments: [\n        {\n          attachment: this.makeAttachmentTexture().createView(),\n          loadValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n        },\n      ],\n    });\n    renderPass.setBindGroup(0, bindGroup, dynamicOffsets);\n    renderPass.endPass();\n    encoder.finish();\n  }\n\n  testRenderBundle(bindGroup: GPUBindGroup, dynamicOffsets: number[]): void {\n    const encoder = this.device.createRenderBundleEncoder({\n      colorFormats: ['rgba8unorm'],\n    });\n    encoder.setBindGroup(0, bindGroup, dynamicOffsets);\n    encoder.finish();\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('dynamic_offsets_passed_but_not_expected,compute_pass')\n  .params(poptions('type', ['compute', 'renderpass', 'renderbundle']))\n  .fn(async t => {\n    const bindGroupLayout = t.device.createBindGroupLayout({ entries: [] });\n    const bindGroup = t.device.createBindGroup({ layout: bindGroupLayout, entries: [] });\n\n    const { type } = t.params;\n    const dynamicOffsets = [0];\n\n    t.expectValidationError(() => {\n      if (type === 'compute') {\n        const encoder = t.device.createCommandEncoder();\n        const computePass = encoder.beginComputePass();\n        computePass.setBindGroup(0, bindGroup, dynamicOffsets);\n        computePass.endPass();\n        encoder.finish();\n      } else if (type === 'renderpass') {\n        const encoder = t.device.createCommandEncoder();\n        const renderPass = encoder.beginRenderPass({\n          colorAttachments: [\n            {\n              attachment: t.makeAttachmentTexture().createView(),\n              loadValue: { r: 1.0, g: 0.0, b: 0.0, a: 1.0 },\n            },\n          ],\n        });\n        renderPass.setBindGroup(0, bindGroup, dynamicOffsets);\n        renderPass.endPass();\n        encoder.finish();\n      } else if (type === 'renderbundle') {\n        const encoder = t.device.createRenderBundleEncoder({\n          colorFormats: ['rgba8unorm'],\n        });\n        encoder.setBindGroup(0, bindGroup, dynamicOffsets);\n        encoder.finish();\n      } else {\n        t.fail();\n      }\n    });\n  });\n\ng.test('dynamic_offsets_match_expectations_in_pass_encoder')\n  .params(\n    params()\n      .combine(poptions('type', ['compute', 'renderpass', 'renderbundle']))\n      .combine([\n        { dynamicOffsets: [256, 0], _success: true }, // Dynamic offsets aligned\n        { dynamicOffsets: [1, 2], _success: false }, // Dynamic offsets not aligned\n\n        // Wrong number of dynamic offsets\n        { dynamicOffsets: [256, 0, 0], _success: false },\n        { dynamicOffsets: [256], _success: false },\n        { dynamicOffsets: [], _success: false },\n\n        // Dynamic uniform buffer out of bounds because of binding size\n        { dynamicOffsets: [512, 0], _success: false },\n        { dynamicOffsets: [1024, 0], _success: false },\n        { dynamicOffsets: [0xffffffff, 0], _success: false },\n\n        // Dynamic storage buffer out of bounds because of binding size\n        { dynamicOffsets: [0, 512], _success: false },\n        { dynamicOffsets: [0, 1024], _success: false },\n        { dynamicOffsets: [0, 0xffffffff], _success: false },\n      ])\n  )\n  .fn(async t => {\n    // Dynamic buffer offsets require offset to be divisible by 256\n    const MIN_DYNAMIC_BUFFER_OFFSET_ALIGNMENT = 256;\n    const BINDING_SIZE = 9;\n\n    const bindGroupLayout = t.device.createBindGroupLayout({\n      entries: [\n        {\n          binding: 0,\n          visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT,\n          type: 'uniform-buffer',\n          hasDynamicOffset: true,\n        },\n        {\n          binding: 1,\n          visibility: GPUShaderStage.COMPUTE | GPUShaderStage.FRAGMENT,\n          type: 'storage-buffer',\n          hasDynamicOffset: true,\n        },\n      ],\n    });\n\n    const uniformBuffer = t.device.createBuffer({\n      size: 2 * MIN_DYNAMIC_BUFFER_OFFSET_ALIGNMENT + 8,\n      usage: GPUBufferUsage.UNIFORM,\n    });\n\n    const storageBuffer = t.device.createBuffer({\n      size: 2 * MIN_DYNAMIC_BUFFER_OFFSET_ALIGNMENT + 8,\n      usage: GPUBufferUsage.STORAGE,\n    });\n\n    const bindGroup = t.device.createBindGroup({\n      layout: bindGroupLayout,\n      entries: [\n        {\n          binding: 0,\n          resource: {\n            buffer: uniformBuffer,\n            size: BINDING_SIZE,\n          },\n        },\n        {\n          binding: 1,\n          resource: {\n            buffer: storageBuffer,\n            size: BINDING_SIZE,\n          },\n        },\n      ],\n    });\n\n    const { type, dynamicOffsets, _success } = t.params;\n\n    t.expectValidationError(() => {\n      if (type === 'compute') {\n        t.testComputePass(bindGroup, dynamicOffsets);\n      } else if (type === 'renderpass') {\n        t.testRenderPass(bindGroup, dynamicOffsets);\n      } else if (type === 'renderbundle') {\n        t.testRenderBundle(bindGroup, dynamicOffsets);\n      } else {\n        t.fail();\n      }\n      t.testComputePass(bindGroup, dynamicOffsets);\n    }, !_success);\n  });\n\n// TODO: test error bind group\n"],"file":"setBindGroup.spec.js"}