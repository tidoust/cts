{"version":3,"sources":["../../../../src/webgpu/api/validation/copyBufferToBuffer.spec.ts"],"names":["description","poptions","params","makeTestGroup","kBufferUsages","kMaxSafeMultipleOf8","ValidationTest","F","TestCopyBufferToBuffer","options","srcBuffer","srcOffset","dstBuffer","dstOffset","copySize","isSuccess","commandEncoder","device","createCommandEncoder","copyBufferToBuffer","expectValidationError","finish","g","test","fn","t","validBuffer","createBuffer","size","usage","GPUBufferUsage","COPY_SRC","COPY_DST","errorBuffer","getErrorBuffer","combine","srcUsage","dstUsage","_isSuccess","buffer"],"mappings":"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","sourcesContent":["export const description = `\ncopyBufferToBuffer tests.\n\nTest Plan:\n* Buffer is valid/invalid\n  - the source buffer is invalid\n  - the destination buffer is invalid\n* Buffer usages\n  - the source buffer is created without GPUBufferUsage::COPY_SRC\n  - the destination buffer is created without GPUBufferUsage::COPY_DEST\n* CopySize\n  - copySize is not a multiple of 4\n  - copySize is 0\n* copy offsets\n  - sourceOffset is not a multiple of 4\n  - destinationOffset is not a multiple of 4\n* Arthimetic overflow\n  - (sourceOffset + copySize) is overflow\n  - (destinationOffset + copySize) is overflow\n* Out of bounds\n  - (sourceOffset + copySize) > size of source buffer\n  - (destinationOffset + copySize) > size of destination buffer\n* Source buffer and destination buffer are the same buffer\n`;\n\nimport { poptions, params } from '../../../common/framework/params_builder.js';\nimport { makeTestGroup } from '../../../common/framework/test_group.js';\nimport { kBufferUsages } from '../../capability_info.js';\nimport { kMaxSafeMultipleOf8 } from '../../util/math.js';\n\nimport { ValidationTest } from './validation_test.js';\n\nclass F extends ValidationTest {\n  TestCopyBufferToBuffer(options: {\n    srcBuffer: GPUBuffer;\n    srcOffset: number;\n    dstBuffer: GPUBuffer;\n    dstOffset: number;\n    copySize: number;\n    isSuccess: boolean;\n  }): void {\n    const { srcBuffer, srcOffset, dstBuffer, dstOffset, copySize, isSuccess } = options;\n\n    const commandEncoder = this.device.createCommandEncoder();\n    commandEncoder.copyBufferToBuffer(srcBuffer, srcOffset, dstBuffer, dstOffset, copySize);\n\n    this.expectValidationError(() => {\n      commandEncoder.finish();\n    }, !isSuccess);\n  }\n}\n\nexport const g = makeTestGroup(F);\n\ng.test('copy_with_invalid_buffer').fn(async t => {\n  const validBuffer = t.device.createBuffer({\n    size: 16,\n    usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n  });\n\n  const errorBuffer = t.getErrorBuffer();\n\n  t.TestCopyBufferToBuffer({\n    srcBuffer: errorBuffer,\n    srcOffset: 0,\n    dstBuffer: validBuffer,\n    dstOffset: 0,\n    copySize: 8,\n    isSuccess: false,\n  });\n\n  t.TestCopyBufferToBuffer({\n    srcBuffer: validBuffer,\n    srcOffset: 0,\n    dstBuffer: errorBuffer,\n    dstOffset: 0,\n    copySize: 8,\n    isSuccess: false,\n  });\n});\n\ng.test('buffer_usage')\n  .params(\n    params()\n      .combine(poptions('srcUsage', kBufferUsages))\n      .combine(poptions('dstUsage', kBufferUsages))\n  )\n  .fn(async t => {\n    const { srcUsage, dstUsage } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: srcUsage,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: dstUsage,\n    });\n\n    const isSuccess = srcUsage === GPUBufferUsage.COPY_SRC && dstUsage === GPUBufferUsage.COPY_DST;\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset: 0,\n      dstBuffer,\n      dstOffset: 0,\n      copySize: 8,\n      isSuccess,\n    });\n  });\n\ng.test('copy_size_alignment')\n  .params([\n    { copySize: 0, _isSuccess: true },\n    { copySize: 2, _isSuccess: false },\n    { copySize: 4, _isSuccess: true },\n    { copySize: 5, _isSuccess: false },\n    { copySize: 8, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { copySize, _isSuccess: isSuccess } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset: 0,\n      dstBuffer,\n      dstOffset: 0,\n      copySize,\n      isSuccess,\n    });\n  });\n\ng.test('copy_offset_alignment')\n  .params([\n    { srcOffset: 0, dstOffset: 0, _isSuccess: true },\n    { srcOffset: 2, dstOffset: 0, _isSuccess: false },\n    { srcOffset: 4, dstOffset: 0, _isSuccess: true },\n    { srcOffset: 5, dstOffset: 0, _isSuccess: false },\n    { srcOffset: 8, dstOffset: 0, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 2, _isSuccess: false },\n    { srcOffset: 0, dstOffset: 4, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 5, _isSuccess: false },\n    { srcOffset: 0, dstOffset: 8, _isSuccess: true },\n    { srcOffset: 4, dstOffset: 4, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, _isSuccess: isSuccess } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset,\n      dstBuffer,\n      dstOffset,\n      copySize: 8,\n      isSuccess,\n    });\n  });\n\ng.test('copy_overflow')\n  .params([\n    { srcOffset: 0, dstOffset: 0, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: 16, dstOffset: 0, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: 0, dstOffset: 16, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: kMaxSafeMultipleOf8, dstOffset: 0, copySize: 16 },\n    { srcOffset: 0, dstOffset: kMaxSafeMultipleOf8, copySize: 16 },\n    { srcOffset: kMaxSafeMultipleOf8, dstOffset: 0, copySize: kMaxSafeMultipleOf8 },\n    { srcOffset: 0, dstOffset: kMaxSafeMultipleOf8, copySize: kMaxSafeMultipleOf8 },\n    {\n      srcOffset: kMaxSafeMultipleOf8,\n      dstOffset: kMaxSafeMultipleOf8,\n      copySize: kMaxSafeMultipleOf8,\n    },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, copySize } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset,\n      dstBuffer,\n      dstOffset,\n      copySize,\n      isSuccess: false,\n    });\n  });\n\ng.test('copy_out_of_bounds')\n  .params([\n    { srcOffset: 0, dstOffset: 0, copySize: 32, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 0, copySize: 36 },\n    { srcOffset: 36, dstOffset: 0, copySize: 4 },\n    { srcOffset: 0, dstOffset: 36, copySize: 4 },\n    { srcOffset: 36, dstOffset: 0, copySize: 0 },\n    { srcOffset: 0, dstOffset: 36, copySize: 0 },\n    { srcOffset: 20, dstOffset: 0, copySize: 16 },\n    { srcOffset: 20, dstOffset: 0, copySize: 12, _isSuccess: true },\n    { srcOffset: 0, dstOffset: 20, copySize: 16 },\n    { srcOffset: 0, dstOffset: 20, copySize: 12, _isSuccess: true },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, copySize, _isSuccess = false } = t.params;\n\n    const srcBuffer = t.device.createBuffer({\n      size: 32,\n      usage: GPUBufferUsage.COPY_SRC,\n    });\n    const dstBuffer = t.device.createBuffer({\n      size: 32,\n      usage: GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer,\n      srcOffset,\n      dstBuffer,\n      dstOffset,\n      copySize,\n      isSuccess: _isSuccess,\n    });\n  });\n\ng.test('copy_within_same_buffer')\n  .params([\n    { srcOffset: 0, dstOffset: 8, copySize: 4 },\n    { srcOffset: 8, dstOffset: 0, copySize: 4 },\n    { srcOffset: 0, dstOffset: 4, copySize: 8 },\n    { srcOffset: 4, dstOffset: 0, copySize: 8 },\n  ] as const)\n  .fn(async t => {\n    const { srcOffset, dstOffset, copySize } = t.params;\n\n    const buffer = t.device.createBuffer({\n      size: 16,\n      usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST,\n    });\n\n    t.TestCopyBufferToBuffer({\n      srcBuffer: buffer,\n      srcOffset,\n      dstBuffer: buffer,\n      dstOffset,\n      copySize,\n      isSuccess: false,\n    });\n  });\n"],"file":"copyBufferToBuffer.spec.js"}